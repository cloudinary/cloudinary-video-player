@use "sass:meta";
@use "sass:string";
// https://github.com/sass/sass/issues/659#issuecomment-64819075
@function char($character-code) {
  @if meta.function-exists("selector-append") {
    @return string.unquote("\"\\#{$character-code}\"");
  }

  @return string.slice("\x", 1, 1) + $character-code;
}

$icon-font-family: VideoJS;

@font-face {
  font-family: $icon-font-family;
  src: url(data:application/font-woff;charset=utf-8;base64,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) format('woff');
  font-weight: normal;
  font-style: normal;
}

// https://sass-lang.com/documentation/values/maps
$icons: (
    play: 'f101',
    play-circle: 'f102',
    pause: 'f103',
    volume-mute: 'f104',
    volume-low: 'f105',
    volume-mid: 'f106',
    volume-high: 'f107',
    fullscreen-enter: 'f108',
    fullscreen-exit: 'f109',
    spinner: 'f10a',
    subtitles: 'f10b',
    captions: 'f10c',
    hd: 'f10d',
    chapters: 'f10e',
    downloading: 'f10f',
    file-download: 'f110',
    file-download-done: 'f111',
    file-download-off: 'f112',
    share: 'f113',
    cog: 'f114',
    square: 'f115',
    circle: 'f116',
    circle-outline: 'f117',
    circle-inner-circle: 'f118',
    cancel: 'f119',
    repeat: 'f11a',
    replay: 'f11b',
    replay-5: 'f11c',
    replay-10: 'f11d',
    replay-30: 'f11e',
    forward-5: 'f11f',
    forward-10: 'f120',
    forward-30: 'f121',
    audio: 'f122',
    next-item: 'f123',
    previous-item: 'f124',
    shuffle: 'f125',
    cast: 'f126',
    picture-in-picture-enter: 'f127',
    picture-in-picture-exit: 'f128',
    close: 'f129',
    search: 'f12a',
    audio-description: 'f12b',
    cart: 'f12c',
    check: 'f12d',
    source-switcher: 'f12e',
);

// NOTE: This is as complex as we want to get with SCSS functionality.
//
// Now that we have a map of icons above, we can iterate over that map and create an icon class
// for each icon in that list. The iterator below produces CSS classes like this:
//
// .vjs-icon-play {
//   font-family: VideoJS;
//   font-weight: normal;
//   font-style: normal;
// }
// .vjs-icon-play:before { content: "\f101"; }
//
// We can then use @extend in the codebase when we need to add an icon to a class. @extend builds up
// the selectors for you so you can avoid duplication. This is generally a bad idea, but since each
// icon should only be extended one or two other places, we'll roll with it.
@each $name, $content in $icons {
  .vjs-icon-#{$name} {
    font-family: $icon-font-family;
    font-weight: normal;
    font-style: normal;

    &:before {
      content: char($content);
    }
  }
}
